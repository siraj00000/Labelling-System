{"version":3,"file":"static/js/9494.984261fc.chunk.js","mappings":"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","sources":["pages/UserPanel/EndUserAuthentication/endUserlogin.js","utils/userActions/index.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { actionPost } from '../../../utils/userActions';\r\nimport swal from 'sweetalert';\r\nimport '../form.css';\r\nimport { Alert } from '@mui/material';\r\n\r\nconst EndUserLogin = () => {\r\n    const navigate = useNavigate();\r\n    const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const setLoginCredentials = (e) => {\r\n        const { name, value } = e.target;\r\n        setCredentials(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n    const endUserLoginHandler = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let URL = `/api/login-enduser`;\r\n            const response = await actionPost(URL, credentials);\r\n            if (response.data.success) {\r\n                swal(\"Good job!\", \"Successfully Logged in\", \"success\");\r\n            }\r\n            localStorage.setItem(\"endutoken\", response?.data?.token);\r\n            navigate(\"/\");\r\n        } catch (err) {\r\n            setError(err);\r\n        }\r\n        setCredentials({ email: \"\", password: \"\" });\r\n    };\r\n    return (\r\n        <main>\r\n            <form className='--form-layout -w-half' onSubmit={endUserLoginHandler}>\r\n                <h1>Login</h1>\r\n                {error !== '' && <Alert severity=\"error\">{error}</Alert>}\r\n                <div className='-input-full'>\r\n                    <label>Email</label>\r\n                    <input\r\n                        name='email'\r\n                        type={'email'}\r\n                        placeholder='mark@example.com'\r\n                        value={credentials.email}\r\n                        onChange={setLoginCredentials}\r\n                    />\r\n                </div>\r\n                <div className='-input-full'>\r\n                    <label>Password</label>\r\n                    <input\r\n                        name='password'\r\n                        type={'password'}\r\n                        placeholder='mark!123'\r\n                        value={credentials.password}\r\n                        onChange={setLoginCredentials}\r\n                    />\r\n                </div>\r\n                <button>Login</button>\r\n                <NavLink to=\"/user/sign-up\">Don't have an account? Sign up</NavLink>\r\n            </form>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default EndUserLogin;","import API from \"../../API\";\r\n\r\nexport const verifyDSN = async (token, url) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const response = await API({\r\n                method: 'POST', url,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n            });\r\n            resolve(response);\r\n        } catch (error) {\r\n            reject(error?.response.data.error);\r\n        }\r\n    });\r\n};\r\n\r\nexport const userAuthenticationAction = async (url, data) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const response = await API({\r\n                method: 'POST',\r\n                url,\r\n                data,\r\n            });\r\n            resolve(response);\r\n        } catch (error) {\r\n            reject(error?.response.data.error);\r\n        }\r\n    });\r\n};\r\n\r\nexport const actionPost = async (url, data) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const response = await API({\r\n                method: 'POST',\r\n                url,\r\n                data,\r\n            });\r\n            resolve(response);\r\n        } catch (error) {\r\n            reject(error?.response.data.error);\r\n        }\r\n    });\r\n};\r\n\r\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["navigate","useNavigate","useState","email","password","credentials","setCredentials","error","setError","setLoginCredentials","e","target","name","value","prevState","endUserLoginHandler","preventDefault","actionPost","response","data","success","swal","localStorage","setItem","token","className","onSubmit","severity","type","placeholder","onChange","to","verifyDSN","url","Promise","resolve","reject","API","method","headers","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}