{"version":3,"file":"static/js/4239.f7a01fb9.chunk.js","mappings":"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","sources":["mui_theme/title.js","pages/Dashboard/SA_Screens/Admin/CompanyAdmin/registerCompanyAdmin.js","utils/actions/companyData.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst Div = styled('div')(({ theme }) => ({\n    ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper,\n    fontSize: '25px',\n    fontWeight: 'bold'\n}));\n\nexport default function CustomizeTitle({text}) {\n    return <Div>{text}</Div>;\n}","import React from 'react';\nimport { Alert } from '@mui/material';\nimport { useState } from 'react';\nimport CustomizeTitle from '../../../../../mui_theme/title';\nimport { CompanyAdminRegistration, fetchCompany } from '../../../../../utils/actions/companyData';\nimport '../../../../auth/auth.css';\n\nimport '../admin.css';\nimport { removeStatus, token } from '../../../../../utils/actions';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Splash from '../../../../../components/splash';\n\nconst RegisterCompanyAdmin = () => {\n    let nav = useNavigate();\n    // Field States\n    const [isLoading, setLoading] = useState(false);\n    const [company, setCompany] = useState([]);\n    const [company_email, setCompanyEmail] = useState(\"\");\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [error, setError] = useState('');\n\n    React.useEffect(() => {\n        try {\n            let companyURL = `/api/fetch-company-admin`\n            fetchCompany(token, companyURL)\n                .then(res => {\n                    setCompany(res.data?.data);\n                })\n                .catch(error => {\n                    setError(error?.response.data.error);\n                    removeStatus(setError);\n                });\n        } catch (error) {\n            setError(error);\n            removeStatus(setError);\n        }\n    }, []);\n \n    const registerAdmin = async (e) => {\n        e.preventDefault();\n        // Password Verification\n        if (password.length < 5) {\n            setError(\"Password must contain at least 6 digits\");\n            removeStatus(setError);\n            return false;\n        };\n        setLoading(true)\n        // Data posting\n        let bodyData = { email, password, role: 2, company_email };\n        CompanyAdminRegistration(token, bodyData)\n            .then(res => {\n                swal({\n                    title: \"Success!\",\n                    text: res?.data?.msg,\n                    icon: \"success\",\n                    button: \"Okay!\",\n                }).then(() => {\n                    nav('/ls-admin/admins', { replace: true });\n                    setLoading(false);\n                });\n            })\n            .catch(error => {\n                setError(error);\n                removeStatus(setError);\n                setLoading(false);\n            });\n    };\n    if (isLoading) return <Splash loading={isLoading} />;\n    return (\n        <form className='form-sec' onSubmit={registerAdmin}>\n            <CustomizeTitle text={'Register Company Admin'} />\n            {error !== '' && <Alert severity=\"error\">{error}</Alert>}\n            <div className='company_admin_form'>\n                <div className='company_admin_form_field'>\n                    <label>email</label>\n                    <input type={'email'} placeholder='mark@example' value={email} onChange={e => setEmail(e.target.value)} required />\n                </div>\n                <div className='company_admin_form_field'>\n                    <label>password</label>\n                    <input type={'password'} placeholder='mark123' value={password} onChange={e => setPassword(e.target.value)} required />\n                </div>\n                <div className='company_admin_form_field'>\n                    <label>Company</label>\n                    <select onChange={(e) => setCompanyEmail(e.target.value)} required>\n                        <option value=\"\">select company</option>\n                        {company?.map((item, index) => {\n                            return (\n                                <option\n                                    key={index}\n                                    value={item?.company_email}\n                                    className='company_list'>\n                                    {item?.company_name}\n                                </option>\n                            );\n                        })}\n                    </select>\n                </div>\n            </div>\n            <button>Register Company Admin</button>\n        </form>\n    );\n};\n\nexport default RegisterCompanyAdmin;\n","import API from \"../../API\";\n\n// Fetch\nexport const fetchCompany = async (token, url) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'GET',\n                url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\nexport const fetchAdmins = async (token, formData) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/fetch-admin`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: formData\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Insert Company admin\nexport const CompanyAdminInsert = async (token, detail) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/insert-company-admin`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: detail\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\nexport const CompanyAdminRegistration = async (token, detail) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/auth/register`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: detail\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Update Company Admin \nexport const updateCompanyAdmin = async (url, token, reqBody) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: reqBody\n            });\n            if (response) resolve(response);\n            else reject(response);\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n\n\n// Update manufacturer \nexport const updateManufacturer = async (url, token, reqBody) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: reqBody\n            });\n            if (response) resolve(response);\n            else reject(response);\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n\n// Delete manufacturer \nexport const deleteManufacturer = async (url, token, email) => {\n    API({\n        method: 'DELETE',\n        url: url,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        data: { email }\n    });\n};\n\n// Reset Sub Admin Password\nexport const resetUserPassword = (token, URL, body) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: URL,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: body\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};  ","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["Div","styled","theme","typography","button","backgroundColor","palette","background","paper","fontSize","fontWeight","CustomizeTitle","text","nav","useNavigate","useState","isLoading","setLoading","company","setCompany","company_email","setCompanyEmail","email","setEmail","password","setPassword","error","setError","React","fetchCompany","token","then","res","data","catch","response","removeStatus","registerAdmin","e","preventDefault","length","bodyData","role","CompanyAdminRegistration","swal","title","msg","icon","replace","loading","className","onSubmit","severity","type","placeholder","value","onChange","target","required","map","item","index","company_name","url","Promise","resolve","reject","API","method","headers","fetchAdmins","formData","CompanyAdminInsert","detail","updateCompanyAdmin","reqBody","updateManufacturer","resetUserPassword","URL","body","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}