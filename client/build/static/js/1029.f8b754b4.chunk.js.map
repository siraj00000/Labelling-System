{"version":3,"file":"static/js/1029.f8b754b4.chunk.js","mappings":"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","sources":["mui_theme/title.js","pages/Dashboard/SA_Screens/Admin/ManufacturerAdmin/createManufacturer.js","utils/actions/companyData.js","../node_modules/@mui/material/utils/useControlled.js","../node_modules/@mui/utils/esm/useControlled.js"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst Div = styled('div')(({ theme }) => ({\n    ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper,\n    fontSize: '25px',\n    fontWeight: 'bold'\n}));\n\nexport default function CustomizeTitle({text}) {\n    return <Div>{text}</Div>;\n}","import React, { useState } from 'react';\nimport { fetchCompany } from '../../../../../utils/actions/companyData';\nimport { removeStatus, token } from '../../../../../utils/actions';\nimport API from '../../../../../API';\nimport Splash from '../../../../../components/splash';\nimport '../../../../auth/auth.css';\nimport '../admin.css';\n// MUI Components\nimport Alert from '@mui/material/Alert';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport CustomizeTitle from '../../../../../mui_theme/title';\nimport { useNavigate } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst CreateCompanyAdmin = () => {\n    let nav = useNavigate();\n    // Field States\n    const [manufacturer_email, setManufacturerEmail] = useState('');\n    const [manufacturer, setManufacturer] = useState('');\n    const [pincode, setPincode] = useState(0);\n    const [manufacturer_active_status, setManufactureActiveStatus] = useState(true);\n    const [phone_one, setPhoneOne] = useState(0);\n    const [phone_two, setPhoneTwo] = useState(0);\n    const [registered_address, setRegisteredAddress] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    const [company, setCompany] = useState([]);\n    const [companySign, setCompanySign] = useState('');\n\n    const [error, setError] = useState('');\n    \n    React.useEffect(() => {\n        try {\n            setLoading(true);\n            let companyURL = `/api/fetch-company-admin`;\n            fetchCompany(token, companyURL)\n                .then(res => {\n                    if (!res?.data.success) setError('404');\n                    setCompany(res.data?.data);\n                })\n                .catch(error => {\n                    setError(error?.response.data.error);\n                    removeStatus(setError);\n                });\n        } catch (error) {\n            setError(error);\n            removeStatus(setError);\n        } finally {\n            setLoading(false);\n        }\n    }, []);\n\n    const verifyFieldValues = () => {\n        if (pincode.length !== 6) {\n            setError(\"Pincode must have 6 digits\");\n            removeStatus(setError);\n            return false;\n        } else if (phone_one.length > 10 || phone_two.length > 10) {\n            setError(\"Phone number exceeding from 10 digits\");\n            removeStatus(setError);\n            return false;\n        } else return true;\n    };\n\n    const insertManufacturer = async (e) => {\n        e.preventDefault();\n        let verify = verifyFieldValues();\n        if (!verify) return false;\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            },\n        };\n\n        try {\n            setLoading(true);\n            const response = await API.post(\"api/insert-manufacturer-admin\", {\n                manufacturer_email, manufacturer, company_id: companySign,\n                pincode, manufacturer_active_status\n            }, config);\n\n            swal({\n                title: \"Success!\",\n                text: response?.data?.msg,\n                icon: \"success\",\n                button: \"Okay!\",\n            }).then(() => {\n                nav('/ls-admin/admins', { replace: true });\n                setLoading(false);\n            });\n        } catch (error) {\n            setError(error?.response.data.error);\n            removeStatus(setError);\n            setLoading(false);\n        }\n    };\n\n    const handleChange = (event) => {\n        setManufactureActiveStatus(event.target.checked);\n    };\n\n    if (error === '404') return <Alert severity='warning' >No company data found !!</Alert>;\n\n    if (isLoading) {\n        return <Splash loading={isLoading} />;\n    }\n\n    return (\n        <form className='form-sec' onSubmit={insertManufacturer}>\n            <CustomizeTitle text={'Add Manufacturer'} />\n            {error !== '' && <Alert severity=\"error\">{error}</Alert>}\n            <div className='company_admin_form'>\n                <div className='company_admin_form_field'>\n                    <label>Manufacturer</label>\n                    <input placeholder='ABC manufacturer...' value={manufacturer} onChange={e => setManufacturer(e.target.value)} required />\n                </div>\n\n                <div className='company_admin_form_field'>\n                    <label>Manufacturer Email</label>\n                    <input placeholder='xyz@manufacturer.com' value={manufacturer_email} onChange={e => setManufacturerEmail(e.target.value)} required />\n                </div>\n\n                <div className='company_admin_form_field'>\n                    <label>Pincode</label>\n                    <input placeholder='392032' value={pincode || ''} onChange={e => setPincode(e.target.value)} required />\n                </div>\n\n                <div className='company_admin_form_field'>\n                    <label>Registration Address</label>\n                    <input placeholder='ABC street' value={registered_address} onChange={e => setRegisteredAddress(e.target.value)} />\n                </div>\n\n                <div className='company_admin_form_field'>\n                    <label>Phone 1</label>\n                    <input placeholder='9132793293' value={phone_one || ''} onChange={e => setPhoneOne(e.target.value)} />\n                </div>\n\n                <div className='company_admin_form_field'>\n                    <label>Phone 2</label>\n                    <input placeholder='9112793293' value={phone_two || ''} onChange={e => setPhoneTwo(e.target.value)} />\n                </div>\n\n                <div className='company_admin_form_field'>\n                    <label>Company</label>\n                    <select onChange={(e) => setCompanySign(e.target.value)} required>\n                        <option value={\"\"}>select company</option>\n                        {company.map((item, index) => {\n                            return (\n                                <option\n                                    key={index}\n                                    value={item?._id}\n                                    className='company_list'>\n                                    {item?.company_name}\n                                </option>\n                            );\n                        })}\n                    </select>\n                </div>\n\n                <div className='company_admin_form_field'>\n                    <label>Company Status</label>\n                    <FormGroup sx={{ display: 'flex', flexDirection: 'row' }}>\n                        <FormControlLabel\n                            name='company_status'\n                            control={\n                                <Checkbox onChange={handleChange} checked={manufacturer_active_status} />\n                            }\n                            label=\"Active\"\n                        />\n                    </FormGroup>\n                </div>\n            </div>\n            <button>Create Manufacturer</button>\n        </form>\n    );\n};\n\nexport default CreateCompanyAdmin; \n","import API from \"../../API\";\n\n// Fetch\nexport const fetchCompany = async (token, url) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'GET',\n                url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\nexport const fetchAdmins = async (token, formData) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/fetch-admin`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: formData\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Insert Company admin\nexport const CompanyAdminInsert = async (token, detail) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/insert-company-admin`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: detail\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\nexport const CompanyAdminRegistration = async (token, detail) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/auth/register`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: detail\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Update Company Admin \nexport const updateCompanyAdmin = async (url, token, reqBody) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: reqBody\n            });\n            if (response) resolve(response);\n            else reject(response);\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n\n\n// Update manufacturer \nexport const updateManufacturer = async (url, token, reqBody) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: reqBody\n            });\n            if (response) resolve(response);\n            else reject(response);\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n\n// Delete manufacturer \nexport const deleteManufacturer = async (url, token, email) => {\n    API({\n        method: 'DELETE',\n        url: url,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        data: { email }\n    });\n};\n\n// Reset Sub Admin Password\nexport const resetUserPassword = (token, URL, body) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: URL,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: body\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};  ","import { unstable_useControlled as useControlled } from '@mui/utils';\nexport default useControlled;","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}"],"names":["Div","styled","theme","typography","button","backgroundColor","palette","background","paper","fontSize","fontWeight","CustomizeTitle","text","nav","useNavigate","useState","manufacturer_email","setManufacturerEmail","manufacturer","setManufacturer","pincode","setPincode","manufacturer_active_status","setManufactureActiveStatus","phone_one","setPhoneOne","phone_two","setPhoneTwo","registered_address","setRegisteredAddress","isLoading","setLoading","company","setCompany","companySign","setCompanySign","error","setError","React","fetchCompany","token","then","res","data","success","catch","response","removeStatus","insertManufacturer","e","preventDefault","length","config","headers","API","company_id","swal","title","msg","icon","replace","severity","loading","className","onSubmit","placeholder","value","onChange","target","required","map","item","index","_id","company_name","sx","display","flexDirection","name","control","event","checked","label","url","Promise","resolve","reject","method","fetchAdmins","formData","CompanyAdminInsert","detail","CompanyAdminRegistration","updateCompanyAdmin","reqBody","updateManufacturer","resetUserPassword","URL","body","useControlled","controlled","defaultProp","default","isControlled","state","undefined","current","valueState","setValue","newValue"],"sourceRoot":""}