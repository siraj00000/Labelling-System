{"version":3,"file":"static/js/5698.2999f287.chunk.js","mappings":"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","sources":["helper/inputbox.js","components/ResetUserModal.js","components/Sweet_Alerts.js","pages/Dashboard/SA_Screens/Admin/CompanyAdmin/viewCompanyAdmin.js","utils/actions/category.js","utils/actions/companyData.js"],"sourcesContent":["import React from 'react';\nimport './helper.css';\n\nconst Inputbox = ({ label, val, onChangeVal, req, type }) => {\n    return (\n        <div className='helper-inputbox'>\n            <label>{label}</label>\n            <input\n                type={type || 'text'}\n                placeholder={`type here...`}\n                value={val}\n                onChange={e => onChangeVal(e.target.value)}\n                required={req || false}\n            />\n        </div>\n    );\n};\n\nexport default Inputbox;","import React from 'react';\nimport { Button, DialogTitle, Dialog, Box } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Inputbox from '../helper/inputbox';\nimport { resetUserPassword } from '../utils/actions/companyData';\nimport { token } from '../utils/actions';\nimport './component.css';\n\n\nexport default function ResetPasswordDialogBox({ email }) {\n    const [open, setOpen] = React.useState(false);\n    const [password, setPassword] = React.useState('');\n    const [status, setStatus] = React.useState({ success: null, msg: '' });\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (value) => {\n        setOpen(false);\n    };\n\n    const cleanStates = () => {\n        setTimeout(() => {\n            setStatus({ success: null, msg: '' });\n            setPassword('');\n            setOpen(false);\n        }, 2000);\n    };\n\n    const handleSubmit = () => {\n        if (password?.length < 6) return setStatus({ success: false, msg: \"Password must have 6 digits atleast !!\" });\n        resetUserPassword(token, '/api/auth/resetpassword-sub-admin', { email, password })\n            .then(res => {\n                setStatus({ success: res.data?.success, msg: res.data?.msg });\n                cleanStates();\n            }).catch(error => {\n                setStatus({ success: false, msg: error });\n            });\n    };\n\n    return (\n        <div>\n            <EditIcon sx={{ cursor: 'pointer' }} onClick={handleClickOpen} />\n            <Dialog onClose={handleClose} open={open}>\n                <DialogTitle>Reset Password</DialogTitle>\n                <Box className='dialog-box'>\n                    <Inputbox\n                        type={'password'}\n                        val={password}\n                        onChangeVal={setPassword}\n                        req\n                    />\n                    {status.msg !== '' &&\n                        <h6 className={status.success ? 'success-msg' : 'error-msg'}>{status.msg}</h6>\n                    }\n                    <Button\n                        onClick={handleSubmit}\n                        variant='contained'\n                        sx={{ marginTop: '20px', width: '100%' }}>Save Changes</Button>\n                </Box>\n            </Dialog>\n        </div>\n    );\n}\n","import swal from 'sweetalert';\n\n// Delete Alert\nexport const DeleteAlert = (deleteRow, url, token, id, email) => {\n    return new Promise((resolve) => {\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover data!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    swal(\"Poof! Your this data has been deleted!\", {\n                        icon: \"success\",\n                    });\n                    deleteRow(url, token, id, email);\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            });\n    });\n};\n\n\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport { useLocation } from 'react-router-dom';\nimport { fetchAdmins } from '../../../../../utils/actions/companyData';\nimport { removeStatus, token } from '../../../../../utils/actions';\nimport { Alert } from '@mui/material';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport Splash from '../../../../../components/splash';\nimport { DeleteAlert } from '../../../../../components/Sweet_Alerts';\nimport { deleteColloction } from '../../../../../utils/actions/category';\nimport swal from 'sweetalert';\nimport ResetPasswordDialogBox from '../../../../../components/ResetUserModal';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n        fontSize: 14,\n    },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n        border: 0,\n    },\n}));\n\nexport default function ViewCompanyAdmin() {\n    const [admins, setAdmins] = React.useState([]);\n    const [isLoading, setLoading] = React.useState(false);\n    const [error, setError] = React.useState('');\n\n    const { state } = useLocation();\n    let { data, type } = state;\n\n    React.useEffect(() => {\n        try {\n            if (data.company_email === '') {\n                swal('Invalid company!');\n                return false;\n            }\n            const formData = new FormData();\n            formData.append(\"company_email\", data.company_email);\n            fetchAdmins(token, formData)\n                .then(res => {\n                    setAdmins(res.data?.data);\n                }).catch(error => {\n                    setError(error);\n                    removeStatus(setError);\n                });\n        } catch (error) {\n            setError(error.message);\n            removeStatus(setError);\n        }\n    }, [isLoading]);\n\n    const deleteHandler = (id, role) => {\n        try {\n            let url = `/api/auth/remove-user/${id}/${role}`;\n            const deleteRow = deleteColloction;\n            DeleteAlert(deleteRow, url, token)\n                .then(res => setLoading(res));\n        } catch (error) {\n            setError(error);\n        }\n    };\n\n    if (isLoading) {\n        setTimeout(() => {\n            setLoading(false);\n        }, 2000);\n        return <Splash loading={isLoading} />;\n    }\n\n    return (\n        <>\n            {error !== '' && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n            <TableContainer sx={{ width: '80%' }} component={Paper}>\n                <Table aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell>{type}</StyledTableCell>\n                            <StyledTableCell align=\"center\">Details</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {Object.entries(data).map(([key, value]) => {\n                            let dateTypeKey = key === 'estaiblishment_year' || key === 'createdAt' || key === 'updatedAt';\n                            const year = dateTypeKey && value.split(\"T\")[0];\n                            let status = (key === 'company_active_status' || key === 'manufacturer_active_status') && (value ? \"Active\" : 'In Active');\n                            return (\n                                <React.Fragment key={key + value}>\n                                    {\n                                        (key !== 'company_id') && (key !== 'sub_category') && (key !== '_id') && (key !== \"__v\") &&\n                                        <StyledTableRow>\n                                            <StyledTableCell align=\"left\">{key}</StyledTableCell>\n                                            <StyledTableCell align=\"center\">{year || status || value}</StyledTableCell>\n                                        </StyledTableRow>\n                                    }\n                                </React.Fragment>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {data?.sub_category.length !== 0 &&\n                <TableContainer sx={{ width: '80%', mt: 5 }} component={Paper}>\n                    <Table aria-label=\"customized table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell>Sub-Category</StyledTableCell>\n                                <StyledTableCell align=\"center\">Details</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {data?.sub_category.map((item, index) => {\n                                // console.log(key);\n                                return (\n                                    <StyledTableRow key={index}>\n                                        <StyledTableCell align=\"left\">sub_category</StyledTableCell>\n                                        <StyledTableCell align=\"center\">{item.sub_category}</StyledTableCell>\n                                    </StyledTableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            }\n            {admins.length !== 0 &&\n                <TableContainer sx={{ width: '80%', mt: 5 }} component={Paper}>\n                    <Table aria-label=\"customized table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell sx={{ width: '45%' }}>{type} Admin</StyledTableCell>\n                                <StyledTableCell sx={{ width: '45%' }} align=\"center\">Details</StyledTableCell>\n                                <StyledTableCell align=\"center\">Delete</StyledTableCell>\n                                <StyledTableCell align=\"center\">Edit</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {admins?.map((item) => {\n                                return (\n                                    <StyledTableRow key={item?._id}>\n                                        <StyledTableCell sx={{ width: '45%' }} align=\"left\">Email</StyledTableCell>\n                                        <StyledTableCell sx={{ width: '45%' }} align=\"center\">{item.email}</StyledTableCell>\n                                        <StyledTableCell\n                                            align=\"center\" onClick={() => deleteHandler(item?._id, item?.role)}>\n                                            <DeleteForeverIcon sx={{ cursor: 'pointer' }} />\n                                        </StyledTableCell>\n                                        <StyledTableCell align=\"center\">\n                                            <ResetPasswordDialogBox email={item.email} />\n                                        </StyledTableCell>\n                                    </StyledTableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            }\n        </>\n    );\n}\n","import API from \"../../API\";\n\n// Fetch\nexport const fetchCategory = async (token, url) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'GET',\n                url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Delete\nexport const deleteColloction = async (url, token) => {\n    API({\n        method: 'DELETE',\n        url: url,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n    });\n};\n\n\n/*-------------SUB CATEGORY-----------------*/\nexport const fetchSubCategory = async (token, url) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'GET', url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Update Sub-Category \nexport const updateSubCategory = async (url, token, reqBody) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: reqBody\n            });\n            if (response) resolve(response);\n            else reject(response);\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n","import API from \"../../API\";\n\n// Fetch\nexport const fetchCompany = async (token, url) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'GET',\n                url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\nexport const fetchAdmins = async (token, formData) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/fetch-admin`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: formData\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Insert Company admin\nexport const CompanyAdminInsert = async (token, detail) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/insert-company-admin`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: detail\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\nexport const CompanyAdminRegistration = async (token, detail) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/auth/register`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: detail\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Update Company Admin \nexport const updateCompanyAdmin = async (url, token, reqBody) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: reqBody\n            });\n            if (response) resolve(response);\n            else reject(response);\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n\n\n// Update manufacturer \nexport const updateManufacturer = async (url, token, reqBody) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: reqBody\n            });\n            if (response) resolve(response);\n            else reject(response);\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n\n// Delete manufacturer \nexport const deleteManufacturer = async (url, token, email) => {\n    API({\n        method: 'DELETE',\n        url: url,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        data: { email }\n    });\n};\n\n// Reset Sub Admin Password\nexport const resetUserPassword = (token, URL, body) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: URL,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: body\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};  "],"names":["label","val","onChangeVal","req","type","className","placeholder","value","onChange","e","target","required","ResetPasswordDialogBox","email","React","open","setOpen","password","setPassword","success","msg","status","setStatus","Edit","sx","cursor","onClick","Dialog","onClose","DialogTitle","Box","Button","length","resetUserPassword","token","then","res","data","setTimeout","catch","error","variant","marginTop","width","DeleteAlert","deleteRow","url","id","Promise","resolve","swal","title","text","icon","buttons","dangerMode","willDelete","StyledTableCell","styled","TableCell","theme","tableCellClasses","backgroundColor","palette","primary","main","color","common","white","fontSize","StyledTableRow","TableRow","action","hover","border","ViewCompanyAdmin","admins","setAdmins","isLoading","setLoading","setError","state","useLocation","company_email","formData","FormData","append","fetchAdmins","removeStatus","message","loading","severity","mb","component","Paper","align","Object","entries","map","key","year","split","sub_category","mt","item","index","role","deleteColloction","deleteHandler","_id","fetchCategory","reject","API","method","headers","response","fetchSubCategory","updateSubCategory","reqBody","fetchCompany","CompanyAdminInsert","detail","CompanyAdminRegistration","updateCompanyAdmin","updateManufacturer","URL","body"],"sourceRoot":""}