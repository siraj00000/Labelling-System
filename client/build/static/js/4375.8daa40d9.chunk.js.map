{"version":3,"file":"static/js/4375.8daa40d9.chunk.js","mappings":"iPA8DA,UAvDkB,WACd,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,GAAsBE,EAAAA,EAAAA,UAAS,IAAG,eAA3BC,EAAG,KAAEC,EAAM,KAClB,GAA0BF,EAAAA,EAAAA,UAAS,IAAG,eAA/BG,EAAK,KAAEC,EAAQ,KAEhBC,EAAqB,yCAAG,WAAOC,GAAC,8EAGvB,OAFXA,EAAEC,iBAAiB,SAER,4BACgBC,EAAAA,EAAAA,IADhB,kBACgC,CAAEP,IAAAA,EAAKQ,QAAc,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOW,UAAW,KAAD,EAAlEC,EAAQ,OACdC,IAAK,YAAqB,OAARD,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAUE,YAAI,WAAN,EAAR,EAAgBC,IAAK,WACvCjB,EAAS,eAAc,kDAEvBQ,EAAS,EAAD,IAAM,0DAErB,gBAV0B,sCAYrBU,EAAe,yCAAG,WAAOR,GAAC,sEAGjB,OAFXA,EAAEC,iBAAiB,SAER,4BACDC,EAAAA,EAAAA,IADC,kBACe,CAAEO,MAAY,OAALjB,QAAK,IAALA,OAAK,EAALA,EAAOiB,MAAON,QAAc,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOW,UAAW,KAAD,kDAGvEL,EAAS,EAAD,IAAM,yDAErB,gBAToB,sCAWrB,OACI,2BACI,kBAAMY,UAAU,wBAAwBC,SAAUZ,EAAsB,WACpE,wBAAI,qBACO,KAAVF,IAAgB,SAAC,IAAK,CAACe,SAAS,QAAO,SAAEf,KAC1C,4BACI,2BAAO,SACP,kBACIgB,KAAK,MACLC,YAAY,OACZC,MAAOpB,EACPqB,SAAU,SAAAhB,GAAC,OAAIJ,EAAOI,EAAEiB,OAAOF,MAAM,QAG7C,4BAAQ,gBACR,mBACIG,KAAK,SACLC,QAASX,EACTE,UAAU,kBAAiB,SAC9B,iBACD,yBAAG,gBAAY,4BAAc,OAALlB,QAAK,IAALA,OAAK,EAALA,EAAOiB,eAI/C,C,iHC1DaW,EAAS,yCAAG,WAAOC,EAAOC,GAAG,+FAC/B,IAAIC,QAAO,yCAAC,WAAOC,EAASC,GAAM,sGAEVC,EAAAA,EAAAA,SAAI,CACvBC,OAAQ,OAAQL,IAAAA,EAChBM,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAD,OAAYP,MAEhC,KAAD,EANIjB,EAAQ,OAOdoB,EAAQpB,GAAU,gDAElBqB,EAAM,OAAC,EAAD,yBAAC,KAAOrB,SAASE,KAAKT,OAAO,yDAE1C,qDAbiB,KAahB,2CACL,gBAfqB,wCAgCTK,EAAU,yCAAG,WAAOoB,EAAKhB,GAAI,+FAC/B,IAAIiB,QAAO,yCAAC,WAAOC,EAASC,GAAM,sGAEVC,EAAAA,EAAAA,SAAI,CACvBC,OAAQ,OACRL,IAAAA,EACAhB,KAAAA,IACD,KAAD,EAJIF,EAAQ,OAKdoB,EAAQpB,GAAU,gDAElBqB,EAAM,OAAC,EAAD,yBAAC,KAAOrB,SAASE,KAAKT,OAAO,yDAE1C,qDAXiB,KAWhB,2CACL,gBAbsB,uC","sources":["pages/UserPanel/EndUserAuthentication/OTPScreen.js","utils/userActions/index.js"],"sourcesContent":["import { Alert } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport { actionPost } from '../../../utils/userActions';\r\nimport '../form.css';\r\n\r\nconst OTPScreen = () => {\r\n    const navigate = useNavigate();\r\n    const { state } = useLocation();\r\n    const [otp, setOTP] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleOTPVerification = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let URL = `/api/verify-otp`;\r\n            const response = await actionPost(URL, { otp, user_id: state?.user_id });\r\n            swal(\"Good job!\", response?.data?.msg, \"success\");\r\n            navigate(\"/user/login\")\r\n        } catch (err) {\r\n            setError(err);\r\n        }\r\n    };\r\n\r\n    const handleResendOTP = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let URL = `/api/resend-otp`;\r\n            await actionPost(URL, { email: state?.email, user_id: state?.user_id });\r\n\r\n        } catch (err) {\r\n            setError(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <form className='--form-layout -w-half' onSubmit={handleOTPVerification}>\r\n                <h1>OTP Verification</h1>\r\n                {error !== '' && <Alert severity=\"error\">{error}</Alert>}\r\n                <div>\r\n                    <label>OTP</label>\r\n                    <input\r\n                        name='otp'\r\n                        placeholder='****'\r\n                        value={otp}\r\n                        onChange={e => setOTP(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button>Verify OTP</button>\r\n                <button\r\n                    type='button'\r\n                    onClick={handleResendOTP}\r\n                    className='-resend-otp-btn'\r\n                >resend otp?</button>\r\n                <p>OTP sent to <strong>{state?.email}</strong></p>\r\n            </form>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default OTPScreen;","import API from \"../../API\";\r\n\r\nexport const verifyDSN = async (token, url) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const response = await API({\r\n                method: 'POST', url,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n            });\r\n            resolve(response);\r\n        } catch (error) {\r\n            reject(error?.response.data.error);\r\n        }\r\n    });\r\n};\r\n\r\nexport const userAuthenticationAction = async (url, data) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const response = await API({\r\n                method: 'POST',\r\n                url,\r\n                data,\r\n            });\r\n            resolve(response);\r\n        } catch (error) {\r\n            reject(error?.response.data.error);\r\n        }\r\n    });\r\n};\r\n\r\nexport const actionPost = async (url, data) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const response = await API({\r\n                method: 'POST',\r\n                url,\r\n                data,\r\n            });\r\n            resolve(response);\r\n        } catch (error) {\r\n            reject(error?.response.data.error);\r\n        }\r\n    });\r\n};\r\n\r\n"],"names":["navigate","useNavigate","state","useLocation","useState","otp","setOTP","error","setError","handleOTPVerification","e","preventDefault","actionPost","user_id","response","swal","data","msg","handleResendOTP","email","className","onSubmit","severity","name","placeholder","value","onChange","target","type","onClick","verifyDSN","token","url","Promise","resolve","reject","API","method","headers"],"sourceRoot":""}