{"version":3,"file":"static/js/9086.1263b213.chunk.js","mappings":"4NA6EA,UAvEoB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,SAACC,GACHC,aAAaC,QAAQ,eACrBF,EAAEG,iBACFC,SAASC,SAAW,eAEzB,IAEH,IAMMC,EAAY,yCAAG,WAAON,GAAP,yFACjBA,EAAEG,iBACII,EAAS,CACXC,QAAS,CACL,eAAgB,qBAJP,kBASUC,EAAAA,QAAAA,KAAS,iBAAkB,CAAElB,MAAAA,EAAOI,SAAAA,GAAYY,GAT1D,gBASLG,EATK,EASLA,KAERT,aAAaU,QAAQ,YAArB,OAAkCD,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAME,OACpCF,EAAKG,WAELZ,aAAaU,QAAQ,OAAQD,EAAKG,SAASC,MApBpCA,EAqBsBJ,EAAKG,SAASC,KAArCC,EApBO,IAAjBC,OAAOF,GAAoB,QACL,IAAjBE,OAAOF,GAAoB,UACV,IAAjBE,OAAOF,GAAoB,oBAA/B,EAmBGpB,EAAW,GAAD,OAAIqB,EAAJ,8BACVjB,EAAS,IACTM,SAASC,SAAW,aAlBX,kDAsBbP,EAAQ,OAAC,EAAD,yBAAC,KAAOmB,SAASP,KAAKb,OAC9BH,EAAW,IACXwB,YAAW,WACPpB,EAAS,MACV,KA1BU,kCANF,IAAAgB,IAME,qBAAH,sDA8BlB,OACI,2BACI,iBAAKK,UAAU,iBAAf,WACI,oBAASA,UAAU,iBACnB,oBAASA,UAAU,sBAAnB,UACI,kBAAMC,SAAUd,EAAhB,UACe,KAAVT,IAAgB,SAAC,IAAD,CAAOwB,SAAS,QAAhB,SAAyBxB,IAC7B,KAAZJ,IAAkB,SAAC,IAAD,CAAO4B,SAAS,UAAhB,SAA2B5B,KAC9C,8CACA,sCACA,kBAAO6B,KAAM,QAASC,KAAM,QAASC,MAAOjC,EAAOkC,SAAU,SAAAzB,GAAC,OAAIR,EAASQ,EAAE0B,OAAOF,QAAQG,UAAQ,EAACC,YAAY,mBACjH,yCACA,kBAAON,KAAM,WAAYE,MAAO7B,EAAU8B,SAAU,SAAAzB,GAAC,OAAIJ,EAAYI,EAAE0B,OAAOF,QAAQG,UAAQ,EAACC,YAAY,cAC3G,mBAAQN,KAAK,SAAb,oBACA,SAAC,KAAD,CAASO,GAAG,2BAAZ,yC","sources":["pages/auth/LoginScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Alert from '@mui/material/Alert';\nimport API from '../../API';\nimport './auth.css';\n\nconst LoginScreen = () => {\n    const [email, setEmail] = useState('');\n    const [success, setSuccess] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    useEffect((e) => {\n        if (localStorage.getItem('authToken')) {\n            e.preventDefault();\n            document.location = \"/ls-admin\";\n        }\n    }, []);\n\n    const successMsg = role => {\n        if (Number(role) === 1) return \"Super\";\n        else if (Number(role) === 2) return \"Company\";\n        else if (Number(role) === 3) return \"Manufacturer\";\n    };\n\n    const loginHandler = async (e) => {\n        e.preventDefault();\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n        try {\n            // Insert User To DB\n            const { data } = await API.post(\"api/auth/login\", { email, password }, config);\n            // Persist Auth Token\n            localStorage.setItem(\"authToken\", data?.token);\n            if (data.userInfo) {\n                // Persist Auth User Role\n                localStorage.setItem(\"role\", data.userInfo.role);\n                const adminType = successMsg(data.userInfo.role);\n                setSuccess(`${adminType} admin login successfull!`);\n                setError(\"\");\n                document.location = \"/ls-admin\";\n            }\n\n        } catch (error) {\n            setError(error?.response.data.error);\n            setSuccess(\"\");\n            setTimeout(() => {\n                setError(\"\");\n            }, 5000);\n        }\n    };\n\n    return (\n        <main>\n            <div className='auth-container'>\n                <section className='auth-bg-img'></section>\n                <section className='auth-form-container'>\n                    <form onSubmit={loginHandler}>\n                        {error !== '' && <Alert severity=\"error\">{error}</Alert>}\n                        {success !== '' && <Alert severity=\"success\">{success}</Alert>}\n                        <h1>Labelling System</h1>\n                        <label>Email</label>\n                        <input type={'email'} name={'email'} value={email} onChange={e => setEmail(e.target.value)} required placeholder='Email Address' />\n                        <label>Password</label>\n                        <input type={'password'} value={password} onChange={e => setPassword(e.target.value)} required placeholder='Password' />\n                        <button type='submit'>Login</button>\n                        <NavLink to=\"/ls-admin/forgetpassword\">Forget Password</NavLink>\n                    </form>\n                </section>\n            </div>\n        </main>\n    );\n};\n\nexport default LoginScreen;"],"names":["useState","email","setEmail","success","setSuccess","password","setPassword","error","setError","useEffect","e","localStorage","getItem","preventDefault","document","location","loginHandler","config","headers","API","data","setItem","token","userInfo","role","adminType","Number","response","setTimeout","className","onSubmit","severity","type","name","value","onChange","target","required","placeholder","to"],"sourceRoot":""}