{"version":3,"file":"static/js/1518.c519af9f.chunk.js","mappings":"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","sources":["helper/inputbox.js","components/ResetUserModal.js","components/Sweet_Alerts.js","pages/Dashboard/SA_Screens/Admin/ManufacturerAdmin/viewManufacturer.js","utils/actions/category.js","utils/actions/companyData.js"],"sourcesContent":["import React from 'react';\nimport './helper.css';\n\nconst Inputbox = ({ label, val, onChangeVal, req, type }) => {\n    return (\n        <div className='helper-inputbox'>\n            <label>{label}</label>\n            <input\n                type={type || 'text'}\n                placeholder={`type here...`}\n                value={val}\n                onChange={e => onChangeVal(e.target.value)}\n                required={req || false}\n            />\n        </div>\n    );\n};\n\nexport default Inputbox;","import React from 'react';\nimport { Button, DialogTitle, Dialog, Box } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Inputbox from '../helper/inputbox';\nimport { resetUserPassword } from '../utils/actions/companyData';\nimport { token } from '../utils/actions';\nimport './component.css';\n\n\nexport default function ResetPasswordDialogBox({ email }) {\n    const [open, setOpen] = React.useState(false);\n    const [password, setPassword] = React.useState('');\n    const [status, setStatus] = React.useState({ success: null, msg: '' });\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (value) => {\n        setOpen(false);\n    };\n\n    const cleanStates = () => {\n        setTimeout(() => {\n            setStatus({ success: null, msg: '' });\n            setPassword('');\n            setOpen(false);\n        }, 2000);\n    };\n\n    const handleSubmit = () => {\n        if (password?.length < 6) return setStatus({ success: false, msg: \"Password must have 6 digits atleast !!\" });\n        resetUserPassword(token, '/api/auth/resetpassword-sub-admin', { email, password })\n            .then(res => {\n                setStatus({ success: res.data?.success, msg: res.data?.msg });\n                cleanStates();\n            }).catch(error => {\n                setStatus({ success: false, msg: error });\n            });\n    };\n\n    return (\n        <div>\n            <EditIcon sx={{ cursor: 'pointer' }} onClick={handleClickOpen} />\n            <Dialog onClose={handleClose} open={open}>\n                <DialogTitle>Reset Password</DialogTitle>\n                <Box className='dialog-box'>\n                    <Inputbox\n                        type={'password'}\n                        val={password}\n                        onChangeVal={setPassword}\n                        req\n                    />\n                    {status.msg !== '' &&\n                        <h6 className={status.success ? 'success-msg' : 'error-msg'}>{status.msg}</h6>\n                    }\n                    <Button\n                        onClick={handleSubmit}\n                        variant='contained'\n                        sx={{ marginTop: '20px', width: '100%' }}>Save Changes</Button>\n                </Box>\n            </Dialog>\n        </div>\n    );\n}\n","import swal from 'sweetalert';\n\n// Delete Alert\nexport const DeleteAlert = (deleteRow, url, token, id, email) => {\n    return new Promise((resolve) => {\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover data!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    swal(\"Poof! Your this data has been deleted!\", {\n                        icon: \"success\",\n                    });\n                    deleteRow(url, token, id, email);\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            });\n    });\n};\n\n\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useLocation } from 'react-router-dom';\nimport { Alert } from '@mui/material';\nimport { fetchAdmins } from '../../../../../utils/actions/companyData';\nimport { removeStatus, token } from '../../../../../utils/actions';\nimport { DeleteAlert } from '../../../../../components/Sweet_Alerts';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport Splash from '../../../../../components/splash';\nimport { deleteColloction } from '../../../../../utils/actions/category';\nimport ResetPasswordDialogBox from '../../../../../components/ResetUserModal';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n        fontSize: 14,\n    },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n        border: 0,\n    },\n}));\n\nexport default function ViewManufacturerAdmin() {\n    const [admins, setAdmins] = React.useState([]);\n    const [isLoading, setLoading] = React.useState(false);\n    const [error, setError] = React.useState('');\n    const { state: { data, type } } = useLocation();\n\n    React.useEffect(() => {\n        try {\n            const formData = new FormData();\n            formData.append(\"company_email\", data?.manufacturer_email);\n            fetchAdmins(token, formData)\n                .then(res => {\n                    setAdmins(res.data?.data);\n                }).catch(error => {\n                    setError(error);\n                    removeStatus(setError);\n                });\n        } catch (error) {\n            setError(error.message);\n            removeStatus(setError);\n        }\n    }, [isLoading]);\n\n    const deleteHandler = (id, role) => {\n        try {\n            let url = `/api/auth/remove-user/${id}/${role}`;\n            const deleteRow = deleteColloction;\n            DeleteAlert(deleteRow, url, token)\n                .then(res => setLoading(res));\n        } catch (error) {\n            setError(error);\n        }\n    };\n\n\n    if (isLoading) {\n        setTimeout(() => {\n            setLoading(false);\n        }, 2000);\n        return <Splash loading={isLoading} />;\n    }\n\n    return (\n        <>\n            {error !== '' && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n            <TableContainer sx={{ width: '80%' }} component={Paper}>\n                <Table aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell>{type} Admin</StyledTableCell>\n                            <StyledTableCell align=\"center\">Details</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {Object.entries(data).length !== 0 &&\n                            Object.entries(data).map(([key, value]) => {\n                                let dateTypeKey = key === 'estaiblishment_year' || key === 'createdAt' || key === 'updatedAt';\n                                const year = dateTypeKey && value.split(\"T\")[0];\n                                let status = (key === 'company_active_status' || key === 'manufacturer_active_status') && (value ? \"Active\" : 'In Active');\n                                let sub_category = key === 'sub_category' && Object.values(value).join(', ');\n\n                                return (\n                                    <React.Fragment key={key + value}>\n                                        {\n                                            (key !== 'company_id') && (key !== '_id') && (key !== \"__v\") &&\n                                            <StyledTableRow>\n                                                <StyledTableCell align=\"left\">{key}</StyledTableCell>\n                                                <StyledTableCell align=\"center\">{sub_category || year || status || value}</StyledTableCell>\n                                            </StyledTableRow>\n                                        }\n                                    </React.Fragment>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {admins?.length !== 0 &&\n                <TableContainer sx={{ width: '80%', mt: 5 }} component={Paper}>\n                    <Table aria-label=\"customized table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell sx={{ width: '45%' }}>Admin</StyledTableCell>\n                                <StyledTableCell sx={{ width: '45%' }} align=\"center\">Details</StyledTableCell>\n                                <StyledTableCell align=\"center\">Delete</StyledTableCell>\n                                <StyledTableCell align=\"center\">Edit</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {admins?.map((item) => {\n                                return (\n                                    <StyledTableRow key={item?._id}>\n                                        <StyledTableCell sx={{ width: '45%' }} align=\"left\">Email</StyledTableCell>\n                                        <StyledTableCell sx={{ width: '45%' }} align=\"center\">{item.email}</StyledTableCell>\n                                        <StyledTableCell\n                                            align=\"center\" onClick={() => deleteHandler(item?._id, item?.role)}>\n                                            <DeleteForeverIcon sx={{ cursor: 'pointer' }} />\n                                        </StyledTableCell>\n                                        <StyledTableCell align=\"center\">\n                                            <ResetPasswordDialogBox email={item.email} />\n                                        </StyledTableCell>\n                                    </StyledTableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            }\n        </>\n    );\n}\n","import API from \"../../API\";\n\n// Fetch\nexport const fetchCategory = async (token, url) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'GET',\n                url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Delete\nexport const deleteColloction = async (url, token) => {\n    API({\n        method: 'DELETE',\n        url: url,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n    });\n};\n\n\n/*-------------SUB CATEGORY-----------------*/\nexport const fetchSubCategory = async (token, url) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'GET', url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Update Sub-Category \nexport const updateSubCategory = async (url, token, reqBody) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: reqBody\n            });\n            if (response) resolve(response);\n            else reject(response);\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n","import API from \"../../API\";\n\n// Fetch\nexport const fetchCompany = async (token, url) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'GET',\n                url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\nexport const fetchAdmins = async (token, formData) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/fetch-admin`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: formData\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Insert Company admin\nexport const CompanyAdminInsert = async (token, detail) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/insert-company-admin`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: detail\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\nexport const CompanyAdminRegistration = async (token, detail) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'POST',\n                url: `/api/auth/register`,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: detail\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};\n\n// Update Company Admin \nexport const updateCompanyAdmin = async (url, token, reqBody) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: reqBody\n            });\n            if (response) resolve(response);\n            else reject(response);\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n\n\n// Update manufacturer \nexport const updateManufacturer = async (url, token, reqBody) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: url,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: reqBody\n            });\n            if (response) resolve(response);\n            else reject(response);\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n\n// Delete manufacturer \nexport const deleteManufacturer = async (url, token, email) => {\n    API({\n        method: 'DELETE',\n        url: url,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        },\n        data: { email }\n    });\n};\n\n// Reset Sub Admin Password\nexport const resetUserPassword = (token, URL, body) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const response = await API({\n                method: 'PUT',\n                url: URL,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${token}`\n                },\n                data: body\n            });\n            resolve(response);\n        } catch (error) {\n            reject(error?.response.data.error);\n        }\n    });\n};  "],"names":["label","val","onChangeVal","req","type","className","placeholder","value","onChange","e","target","required","ResetPasswordDialogBox","email","React","open","setOpen","password","setPassword","success","msg","status","setStatus","Edit","sx","cursor","onClick","Dialog","onClose","DialogTitle","Box","Button","length","resetUserPassword","token","then","res","data","setTimeout","catch","error","variant","marginTop","width","DeleteAlert","deleteRow","url","id","Promise","resolve","swal","title","text","icon","buttons","dangerMode","willDelete","StyledTableCell","styled","TableCell","theme","tableCellClasses","backgroundColor","palette","primary","main","color","common","white","fontSize","StyledTableRow","TableRow","action","hover","border","ViewManufacturerAdmin","admins","setAdmins","isLoading","setLoading","setError","useLocation","state","formData","FormData","append","manufacturer_email","fetchAdmins","removeStatus","message","loading","severity","mb","component","Paper","align","Object","entries","map","key","year","split","sub_category","values","join","mt","item","role","deleteColloction","deleteHandler","_id","fetchCategory","reject","API","method","headers","response","fetchSubCategory","updateSubCategory","reqBody","fetchCompany","CompanyAdminInsert","detail","CompanyAdminRegistration","updateCompanyAdmin","updateManufacturer","URL","body"],"sourceRoot":""}