{"version":3,"file":"static/js/8607.da63bea3.chunk.js","mappings":"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","sources":["components/TopAppbar.js","helper/menu.js","components/Drawer.js","utils/withRouter.js","components/BreadCrumbs.js","components/DashboardLayout.js","pages/Dashboard/index.js"],"sourcesContent":["import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport AdminPanelSettingsOutlinedIcon from '@mui/icons-material/AdminPanelSettingsOutlined';\nimport { useNavigate } from 'react-router-dom';\nimport { logoutHandler } from '../utils/actions';\nimport { Box } from '@mui/material';\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nconst TopAppbar = ({ open, setOpen }) => {\n    let nav = useNavigate();\n    let role = Number(localStorage.getItem('role'));\n    let hasAdminRole = (role === 1 && \"Super Admin\") || (role === 2 && \"Company Admin\") || (role === 3 && \"Manufacturer Admin\");\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    return (\n        <div>\n            <AppBar position=\"fixed\" open={open}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        sx={{\n                            marginRight: 5,\n                            ...(open && { display: 'none' }),\n                        }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        onClick={() => nav('/ls-admin')}\n                        className='direction'\n                        sx={{ cursor: 'pointer', gap: 1 }}\n                    >\n                        <AdminPanelSettingsOutlinedIcon fontSize='large' />\n                        {hasAdminRole}\n                    </Typography>\n                    <Box\n                        sx={{\n                            position: 'absolute',\n                            right: 20,\n                            cursor: 'pointer',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            gap: '5px'\n                        }}\n                        onClick={logoutHandler}\n                    >\n                        <LogoutIcon />\n                        <Typography>Logout</Typography>\n                    </Box>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default TopAppbar;","import SupervisorAccountOutlinedIcon from '@mui/icons-material/SupervisorAccountOutlined';\nimport GridViewIcon from '@mui/icons-material/GridView';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\nimport DiamondOutlinedIcon from '@mui/icons-material/DiamondOutlined';\nimport AddBoxOutlinedIcon from '@mui/icons-material/AddBoxOutlined';\nimport LabelOutlinedIcon from '@mui/icons-material/LabelOutlined';\n\nconst drawerMenuList = (navigate) => {\n    let role = Number(localStorage.getItem('role'));\n\n    const SUPER_ADMIN = [\n        {\n            routeName: \"Admin\",\n            Icon: SupervisorAccountOutlinedIcon,\n            handler: () => navigate(\"/ls-admin/admins\")\n        },\n        {\n            routeName: \"Category\",\n            Icon: GridViewIcon,\n            handler: () => navigate(\"/ls-admin/category\")\n        },\n        {\n            routeName: \"Sub Category\",\n            Icon: ListAltIcon,\n            handler: () => navigate(\"/ls-admin/subcategory\")\n        },\n        {\n            routeName: \"Brand\",\n            Icon: DiamondOutlinedIcon,\n            handler: () => navigate(\"/ls-admin/brands\")\n        }\n    ];\n\n    const COMPANY_ADMIN = [\n        {\n            routeName: \"Product\",\n            Icon: AddBoxOutlinedIcon,\n            handler: () => navigate(\"/ls-admin/products\")\n        },\n    ];\n\n    const MANUFACTURER_ADMIN = [\n        {\n            routeName: \"Label\",\n            Icon: LabelOutlinedIcon,\n            handler: () => navigate(\"/ls-admin/label\")\n        },\n    ];\n\n    if (role === 1) return SUPER_ADMIN;\n    else if (role === 2) return COMPANY_ADMIN;\n    else if (role === 3) return MANUFACTURER_ADMIN;\n};\n\nexport default drawerMenuList;","import React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport MuiDrawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useNavigate } from 'react-router-dom';\nimport drawerMenuList from '../helper/menu';\nconst drawerWidth = 240;\n\nconst openedMixin = (theme) => ({\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n});\n\nconst closedMixin = (theme) => ({\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n        width: `calc(${theme.spacing(8)} + 1px)`,\n    },\n});\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n        ...(open && {\n            ...openedMixin(theme),\n            '& .MuiDrawer-paper': openedMixin(theme),\n        }),\n        ...(!open && {\n            ...closedMixin(theme),\n            '& .MuiDrawer-paper': closedMixin(theme),\n        }),\n    }),\n);\nconst AppDrawer = ({ open, setOpen }) => {\n    const theme = useTheme();\n    let navigate = useNavigate();\n\n    const DrawerMenuItem = drawerMenuList(navigate);\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Drawer variant=\"permanent\" open={open}>\n                <DrawerHeader>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                    </IconButton>\n                </DrawerHeader>\n                <Divider />\n                <List>\n                    {DrawerMenuItem.map((item, index) => {\n                        let { Icon, handler, routeName } = item;\n                        return (\n                            <ListItem key={index} onClick={handler} disablePadding sx={{ display: 'block' }}>\n                                <ListItemButton\n                                    sx={{\n                                        minHeight: 48,\n                                        justifyContent: open ? 'initial' : 'center',\n                                        px: 2.5,\n                                    }}\n                                >\n                                    <ListItemIcon\n                                        sx={{\n                                            minWidth: 0,\n                                            mr: open ? 3 : 'auto',\n                                            justifyContent: 'center',\n                                        }}\n                                    >\n                                        <Icon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={routeName} sx={{ opacity: open ? 1 : 0 }} />\n                                </ListItemButton>\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </Drawer>\n        </div>\n    );\n};\n\nexport default AppDrawer;","import {\n    useLocation,\n    useNavigate,\n    useParams\n} from \"react-router-dom\";\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n    return ComponentWithRouterProp;\n}\nexport default withRouter","import React from 'react';\nimport { Breadcrumbs as MUIBreadcrumbs, Link } from '@mui/material';\nimport withRouter from '../utils/withRouter';\n\nconst BreadCrumbs = props => {\n    const { location: { pathname }, navigate } = props?.router;\n    const pathnames = pathname.split('/').filter(x => x);\n    // Won't allow to render on homepage\n    const navigationHandler = (path, condition) => {\n        if (path === 'ls-admin') return navigate(`/${path}`);\n        else if (!condition) navigate(`/ls-admin/${path}`);\n    };\n    return (\n        <div>\n            <MUIBreadcrumbs aria-label=\"breadcrumb\">\n                {pathnames.map((name, index) => {\n                    let lastPath = pathnames[pathnames.length - 1] === name;\n                    let matchPath = name === 'ls-admin';\n                    return (\n                        <Link\n                            key={index}\n                            color={lastPath ? 'primary' : 'inherit'}\n                            sx={{ cursor: 'pointer', textDecoration: 'none' }}\n                            onClick={() => navigationHandler(name, lastPath)}>\n                            {matchPath ? \"Home\" : name}\n                        </Link>\n                    );\n                })}\n            </MUIBreadcrumbs>\n        </div>\n    );\n};\n\nexport default withRouter(BreadCrumbs);","import React from 'react';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TopAppbar from './TopAppbar';\nimport AppDrawer from './Drawer';\nimport BreadCrumbs from './BreadCrumbs';\n\nexport default function DashboardLayout(props) {\n    const [open, setOpen] = React.useState(false);\n    \n    return (\n        <Box sx={{ display: 'flex' }}>\n            <CssBaseline />\n            <TopAppbar open={open} setOpen={setOpen} />\n            <AppDrawer open={open} setOpen={setOpen} />\n            <Box sx={{ width: '100%', margin: \"8% 5%\", }}>\n                <BreadCrumbs />\n                <Box sx={{ marginTop: '1%', width: '100%' }}>{props.children}</Box>\n            </Box>\n        </Box>\n    );\n}\n","import React from 'react';\nimport DashboardLayout from '../../components/DashboardLayout';\nimport { Outlet } from 'react-router-dom';\n\n\nconst DashBoard = () => {\n  return (\n    <DashboardLayout>\n      <Outlet />\n    </DashboardLayout>\n  );\n};\n\nexport default DashBoard;"],"names":["AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","setOpen","nav","useNavigate","role","Number","localStorage","getItem","hasAdminRole","position","Toolbar","IconButton","color","onClick","edge","sx","marginRight","display","Menu","Typography","variant","noWrap","component","className","cursor","gap","AdminPanelSettingsOutlined","fontSize","Box","right","justifyContent","alignItems","logoutHandler","Logout","navigate","SUPER_ADMIN","routeName","Icon","SupervisorAccountOutlinedIcon","handler","GridViewIcon","ListAltIcon","DiamondOutlinedIcon","COMPANY_ADMIN","AddBoxOutlinedIcon","MANUFACTURER_ADMIN","LabelOutlinedIcon","openedMixin","overflowX","closedMixin","spacing","breakpoints","up","DrawerHeader","padding","mixins","toolbar","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","useTheme","DrawerMenuItem","drawerMenuList","direction","ChevronRight","ChevronLeft","Divider","List","map","item","index","ListItem","disablePadding","ListItemButton","minHeight","px","ListItemIcon","minWidth","mr","ListItemText","primary","opacity","Component","props","location","useLocation","params","useParams","router","pathname","pathnames","split","filter","x","name","lastPath","length","matchPath","Link","textDecoration","path","condition","navigationHandler","DashboardLayout","React","CssBaseline","margin","marginTop","children"],"sourceRoot":""}