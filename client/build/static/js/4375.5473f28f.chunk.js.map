{"version":3,"file":"static/js/4375.5473f28f.chunk.js","mappings":"gPA8DA,UAvDkB,WACd,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,GAAsBE,EAAAA,EAAAA,UAAS,IAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAqB,yCAAG,WAAOC,GAAP,qFAC1BA,EAAEC,iBADwB,qCAICC,EAAAA,EAAAA,IAJD,kBAIiB,CAAEP,IAAAA,EAAKQ,QAAO,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAOW,UAJxC,OAIhBC,EAJgB,OAKtBC,IAAK,YAAD,OAAcD,QAAd,IAAcA,GAAd,UAAcA,EAAUE,YAAxB,aAAc,EAAgBC,IAAK,WACvCjB,EAAS,eANa,kDAQtBQ,EAAS,EAAD,IARc,0DAAH,sDAYrBU,EAAe,yCAAG,WAAOR,GAAP,6EACpBA,EAAEC,iBADkB,qCAIVC,EAAAA,EAAAA,IAJU,kBAIM,CAAEO,MAAK,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAOiB,MAAON,QAAO,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAOW,UAJ7C,uDAOhBL,EAAS,EAAD,IAPQ,yDAAH,sDAWrB,OACI,2BACI,kBAAMY,UAAU,wBAAwBC,SAAUZ,EAAlD,WACI,6CACW,KAAVF,IAAgB,SAAC,IAAD,CAAOe,SAAS,QAAhB,SAAyBf,KAC1C,4BACI,oCACA,kBACIgB,KAAK,MACLC,YAAY,OACZC,MAAOpB,EACPqB,SAAU,SAAAhB,GAAC,OAAIJ,EAAOI,EAAEiB,OAAOF,cAGvC,4CACA,mBACIG,KAAK,SACLC,QAASX,EACTE,UAAU,kBAHd,0BAKA,yCAAe,mCAASlB,QAAT,IAASA,OAAT,EAASA,EAAOiB,kB,+GCtDlCW,EAAS,yCAAG,WAAOC,EAAOC,GAAd,+FACd,IAAIC,QAAJ,yCAAY,WAAOC,EAASC,GAAhB,sGAEYC,EAAAA,EAAAA,SAAI,CACvBC,OAAQ,OAAQL,IAAAA,EAChBM,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BP,MANxB,OAELjB,EAFK,OASXoB,EAAQpB,GATG,gDAWXqB,EAAM,OAAC,EAAD,yBAAC,KAAOrB,SAASE,KAAKT,OAXjB,yDAAZ,0DADc,2CAAH,wDAgCTK,EAAU,yCAAG,WAAOoB,EAAKhB,GAAZ,+FACf,IAAIiB,QAAJ,yCAAY,WAAOC,EAASC,GAAhB,sGAEYC,EAAAA,EAAAA,SAAI,CACvBC,OAAQ,OACRL,IAAAA,EACAhB,KAAAA,IALO,OAELF,EAFK,OAOXoB,EAAQpB,GAPG,gDASXqB,EAAM,OAAC,EAAD,yBAAC,KAAOrB,SAASE,KAAKT,OATjB,yDAAZ,0DADe,2CAAH,yD","sources":["pages/UserPanel/EndUserAuthentication/OTPScreen.js","utils/userActions/index.js"],"sourcesContent":["import { Alert } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport { actionPost } from '../../../utils/userActions';\r\nimport '../form.css';\r\n\r\nconst OTPScreen = () => {\r\n    const navigate = useNavigate();\r\n    const { state } = useLocation();\r\n    const [otp, setOTP] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleOTPVerification = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let URL = `/api/verify-otp`;\r\n            const response = await actionPost(URL, { otp, user_id: state?.user_id });\r\n            swal(\"Good job!\", response?.data?.msg, \"success\");\r\n            navigate(\"/user/login\")\r\n        } catch (err) {\r\n            setError(err);\r\n        }\r\n    };\r\n\r\n    const handleResendOTP = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let URL = `/api/resend-otp`;\r\n            await actionPost(URL, { email: state?.email, user_id: state?.user_id });\r\n\r\n        } catch (err) {\r\n            setError(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <form className='--form-layout -w-half' onSubmit={handleOTPVerification}>\r\n                <h1>OTP Verification</h1>\r\n                {error !== '' && <Alert severity=\"error\">{error}</Alert>}\r\n                <div>\r\n                    <label>OTP</label>\r\n                    <input\r\n                        name='otp'\r\n                        placeholder='****'\r\n                        value={otp}\r\n                        onChange={e => setOTP(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button>Verify OTP</button>\r\n                <button\r\n                    type='button'\r\n                    onClick={handleResendOTP}\r\n                    className='-resend-otp-btn'\r\n                >resend otp?</button>\r\n                <p>OTP sent to <strong>{state?.email}</strong></p>\r\n            </form>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default OTPScreen;","import API from \"../../API\";\r\n\r\nexport const verifyDSN = async (token, url) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const response = await API({\r\n                method: 'POST', url,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n            });\r\n            resolve(response);\r\n        } catch (error) {\r\n            reject(error?.response.data.error);\r\n        }\r\n    });\r\n};\r\n\r\nexport const userAuthenticationAction = async (url, data) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const response = await API({\r\n                method: 'POST',\r\n                url,\r\n                data,\r\n            });\r\n            resolve(response);\r\n        } catch (error) {\r\n            reject(error?.response.data.error);\r\n        }\r\n    });\r\n};\r\n\r\nexport const actionPost = async (url, data) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const response = await API({\r\n                method: 'POST',\r\n                url,\r\n                data,\r\n            });\r\n            resolve(response);\r\n        } catch (error) {\r\n            reject(error?.response.data.error);\r\n        }\r\n    });\r\n};\r\n\r\n"],"names":["navigate","useNavigate","state","useLocation","useState","otp","setOTP","error","setError","handleOTPVerification","e","preventDefault","actionPost","user_id","response","swal","data","msg","handleResendOTP","email","className","onSubmit","severity","name","placeholder","value","onChange","target","type","onClick","verifyDSN","token","url","Promise","resolve","reject","API","method","headers"],"sourceRoot":""}